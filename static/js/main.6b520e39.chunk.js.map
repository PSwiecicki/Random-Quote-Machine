{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","state","quote","author","getQuote","bind","getQuotes","setTimeout","index","Math","floor","random","quotes","length","console","log","this","setState","className","React","Component","QuoteContainer","quotesUrl","a","$","ajax","url","success","quotesAsJson","JSON","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUAIMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,GACPC,OAAQ,IAEV,EAAKC,SAAW,EAAKA,SAASC,KAAd,gBANC,E,qDAQnB,WAAqB,IAAD,Q,mCAClBC,GACAC,YAAW,WAAO,EAAKH,aAAa,O,sBAEtC,WACE,IAAMI,EAASC,KAAKC,MAAMD,KAAKE,SAAWC,EAAOC,QACjDC,QAAQC,IAAI,WAAYP,GACxBQ,KAAKC,SAAS,CACZf,MAAOU,EAAOJ,GAAON,MACrBC,OAAQS,EAAOJ,GAAOL,W,oBAG1B,WACE,OACE,sBAAKe,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,wDAEF,+BACE,0BAASA,UAAU,iBAAnB,UACGJ,QAAQC,IAAI,WAAYC,KAAKf,OAC9B,cAAC,EAAD,CACEC,MAAOc,KAAKf,MAAMC,MAClBC,OAAQa,KAAKf,MAAME,qB,GAhCfgB,IAAMC,WAwClBC,E,4JACJ,WACE,OACE,6BAAYH,UAAU,yBAAtB,UACE,oBAAGA,UAAU,OAAb,UACGJ,QAAQC,IAAIC,KAAKhB,MAAME,OACvBc,KAAKhB,MAAME,SAEd,wBAAQgB,UAAU,oBAAlB,SACGF,KAAKhB,MAAMG,gB,GATOgB,IAAMC,WAgB/BR,EAAS,GACPU,EAAY,yI,4CAElB,sBAAAC,EAAA,sEACQC,IAAEC,KAAK,CACXC,IAAKJ,EACLK,QAAS,SAACC,GACmB,kBAAjBA,IACRhB,EAASiB,KAAKC,MAAMF,GAAchB,WAL1C,4C,sBAUeb,QC7DAgC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6b520e39.chunk.js","sourcesContent":["import $, { param } from 'jquery';\nimport './App.css';\nimport React from 'react';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      quote: \"\",\n      author: \"\"\n    }\n    this.getQuote = this.getQuote.bind(this);\n  }\n  componentDidMount() {\n    getQuotes();\n    setTimeout(() => {this.getQuote()}, 5000);\n  }\n  getQuote() {\n    const index  = Math.floor(Math.random() * quotes.length);\n    console.log('index = ', index);\n    this.setState({\n      quote: quotes[index].quote,\n      author: quotes[index].author\n    });\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1>Random Quote Machine</h1>\n        </header>\n        <main>\n          <section className=\"quotes-section\">\n            {console.log('state = ', this.state)}\n            <QuoteContainer\n              quote={this.state.quote}\n              author={this.state.author}/>\n          </section>\n        </main>\n      </div>\n    );\n  }\n}\n\nclass QuoteContainer extends React.Component {\n  render() {\n    return (\n      <blockquote className=\"blockquote text-center\">\n        <p className=\"mb-0\">\n          {console.log(this.props.quote)}\n          {this.props.quote}\n        </p>\n        <footer className=\"blockquote-footer\">\n          {this.props.author}\n        </footer>\n      </blockquote>\n    )\n  }\n}\n\nlet quotes = [];\nconst quotesUrl = 'https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json'\n\nasync function getQuotes() {\n  await $.ajax({\n    url: quotesUrl,\n    success: (quotesAsJson) => {\n      if(typeof quotesAsJson === 'string'){\n        quotes = JSON.parse(quotesAsJson).quotes;\n      }\n    }\n  });\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}